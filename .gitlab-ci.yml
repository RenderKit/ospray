stages:
  - build
  - test-src
  - test-build
  - deploy

variables:
  GIT_DEPTH: "15"
  KW_PROJECT_NAME: ospray

.job_template: &build_job_docker
  stage: build
  tags:
    - docker
  image: ospray/docker-images:arch  # default image
  script:
    - scripts/build_gitlab/linux.sh # default script

.job_template: &build_job_docker_modules
  stage: build
  tags:
    - docker
    - modules
  image: ospray/docker-images:centos6-mod
  script:
    - scripts/build_gitlab/linux.sh

.job_template: &build_job_shell
  stage: build
  tags:
    - build

.job_template: &release_job
  stage: deploy
  tags:
    - release
  dependencies:
    - test-centos6-gcc
    - pdf
  only:
    - devel
    - master
    - /^release-.*$/

.job_template: &test_job
  stage: test-build
  tags:
    - docker
  script:
    - scripts/tests/run_tests.sh
  artifacts:
    paths:
      - $CI_PROJECT_DIR/build/tests.xml
      - $CI_PROJECT_DIR/build/failed
    expire_in: 1 week
    when: always

.job_template: &test_job_windows
  <<: *test_job
  script:
    - scripts\tests\run_tests.bat
  artifacts:
    paths:
      - tests.xml
      - failed
    expire_in: 1 week
    when: always


### BUILD JOBS ###

build-arch-gcc:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-clang:
  <<: *build_job_docker
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-gcc-warnings:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON

build-arch-clang-warnings:
  <<: *build_job_docker
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON

build-ubuntu1604-gcc:
  <<: *build_job_docker
  image: ospray/docker-images:ubuntu16.04
  script:
    - scripts/build_gitlab/linux.sh -G Ninja
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-ubuntu1804-gcc:
  <<: *build_job_docker
  image: ospray/docker-images:ubuntu18.04
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-centos6-gcc:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load gcc/4.8.2
    - export CC=gcc
    - export CXX=g++
    - scripts/build_gitlab/linux.sh
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-centos6-icc:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load gcc/4.8.2
    - module load intel
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos6-icc15:
  <<: *build_job_docker_modules
  script:
    - module load cmake
    - module load gcc/4.8.2
    - module load intel/2015
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos7-gcc:
  <<: *build_job_docker
  image: ospray/docker-images:centos7
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-debug:
  <<: *build_job_docker
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DCMAKE_BUILD_TYPE=Debug

build-osx-clang:
  <<: *build_job_shell
  script:
    - scripts/build_gitlab/osx.sh
  tags:
    - osx
    - clang

build-windows-msvc14:
  <<: *build_job_shell
  script:
    - scripts\build_gitlab\win.bat "Visual Studio 14 2015 Win64" "v140"
  tags:
    - msvc14
    - win7
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-windows-msvc15:
  <<: *build_job_shell
  script:
    - scripts\build_gitlab\win.bat "Visual Studio 15 2017 Win64" "v141"
  tags:
    - msvc15
    - win7
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-windows-icc:
  <<: *build_job_shell
  script:
    - scripts\build_gitlab\win.bat "Visual Studio 14 2015 Win64" "Intel C++ Compiler 18.0"
  tags:
    - icc18
    - win7
  artifacts:
    paths:
      - build/install
    expire_in: 3 day

build-scan-kw:
  stage: build
  image: ospray-kw-centos7
  script:
    - scripts/build_gitlab/build-scan-kw.sh
    - test -s $CI_PROJECT_DIR/kw_build_number
  tags:
    - kw-scan-docker
  artifacts:
    paths:
        - $CI_PROJECT_DIR/kw_build_number
    expire_in: 3 day
  allow_failure: true


### TEST JOBS ###

test-centos7-gcc:
  <<: *test_job
  image: ospray/docker-images:centos7
  dependencies:
    - build-centos7-gcc

test-centos6-gcc:
  <<: *test_job
  image: ospray/docker-images:centos6-mod
  dependencies:
    - build-centos6-gcc
  script:
    - module load cmake
    - module load gcc/4.8.2
    - scripts/tests/run_tests.sh
  tags:
    - modules

test-ubuntu1804-gcc:
  <<: *test_job
  image: ospray/docker-images:ubuntu18.04
  script:
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64/ scripts/tests/run_tests.sh
  dependencies:
    - build-ubuntu1804-gcc

test-ubuntu1604-gcc:
  <<: *test_job
  image: ospray/docker-images:ubuntu16.04
  script:
    - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64/ scripts/tests/run_tests.sh
  dependencies:
    - build-ubuntu1604-gcc

test-windows-icc:
  <<: *test_job_windows
  tags:
    - win7
    - icc
  dependencies:
    - build-windows-icc

#test-windows-msvc15:
#  <<: *test_job_windows
#  tags:
#    - win7
#    - msvc14
#  dependencies:
#    - build-windows-msvc15

test-windows-msvc14:
  <<: *test_job_windows
  tags:
    - win7
    - msvc14
  dependencies:
    - build-windows-msvc14

test-kw-critical:
  stage: test-src
  image: ospray-kw-centos7
  script:
    - /tmp/test-kw-critical.sh
  dependencies:
    - build-scan-kw
  tags:
    - kw-scan-docker
  allow_failure: true

source-protex-scan:
  stage: build
  image: ospray-protex-centos7
  script:
    - /tmp/source-scan-protex.sh
  dependencies:
  tags:
    - protex-scan-docker
  ## Temporarily allow to fail
  when: manual
  allow_failure: true


### Documentation ###

.job_template: &doc-defaults
  stage: build
  tags:
    - docker
  image: ospray/docker-images:docu
  variables:
    GIT_SUBMODULE_STRATEGY: normal

pdf:
  <<: *doc-defaults
  script:
    - cd doc
    - make pdf
  artifacts:
    paths:
      - readme.pdf
    expire_in: 1 week

web:
  <<: *doc-defaults
  script:
    - cd doc
    - make www
  artifacts:
    paths:
      - doc/www/*
    expire_in: 1 week


### RELEASE JOBS ###

release-linux-icc:
  <<: *release_job
  script:
    - module load cmake
    - module load gcc/4.8.2
    - module load intel
    - export CC=icc
    - export CXX=icpc
    - scripts/release/linux.sh
    - cd build_release
    - OSPRAY_VERSION=`sed -n 's/#define OSPRAY_VERSION "\(.*\)"/\1/p' ospray/version.h`
    - $SIGN_FILE_LINUX ospray-*-${OSPRAY_VERSION}-*.rpm
    - tar czf ospray-${OSPRAY_VERSION}.x86_64.rpm.tar.gz ospray-*-${OSPRAY_VERSION}-*.rpm
  tags:
    - icc
    - centos6
  artifacts:
    paths:
      - build_release/*.gz

release-osx-clang:
  <<: *release_job
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/release/macosx.sh
# DMGs cannot be signed; enable signing when switched to PKG:
# $SIGN_FILE_MAC build_release/ospray-*.pkg
  tags:
    - clang
    - osx
  artifacts:
    paths:
      - build_release/*.gz
      - build_release/*.dmg

release-windows:
  <<: *release_job
  script:
    - scripts\release\win.bat
    - Invoke-Expression "$env:SIGN_FILE_WINDOWS build_release\ospray*.msi"
  tags:
    - msvc
    - win7
  artifacts:
    paths:
      - build_release\ospray*.zip
      - build_release\ospray*.msi
