## Copyright 2009 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

stages:
  - build
  - docu
  - test
  - benchmark
  - scan1
  - scan2
  - release
  - scan3
  - mirror

variables:
  GIT_DEPTH: "15"
  ErrorActionPreference: STOP

.job_template: &archlinux
  tags: [ docker ]
  image: $DOCKER_REGISTRY/ospray/docker-images:arch

.job_template: &centos7
  tags: [ docker, modules ]
  image: $DOCKER_REGISTRY/centos:7

.job_template: &centos7-gcc4
  tags: [ docker, modules ]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7-mod

.job_template: &centos8
  tags: [ docker ]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos8

.job_template: &ubuntu1604
  tags: [ docker ]
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu16.04

.job_template: &ubuntu1804
  tags: [ docker ]
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04

.job_template: &ubuntu2004
  tags: [ docker ]
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu20.04

.job_template: &docu
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:docu

.job_template: &clamav
  tags: [docker]
  image: $DOCKER_REGISTRY/clamav:ubuntu20.04

.job_template: &build_artifacts
  artifacts:
    paths:
      - build/install/ospray
      - build/CMakeCache.txt
      - build/*/build/CMakeCache.txt
    expire_in: 3 day

.job_template: &build_artifacts_all
  artifacts:
    paths:
      - build/install
      - build/CMakeCache.txt
      - build/*/build/CMakeCache.txt
    expire_in: 3 day

.job_template: &release_job
  stage: release
  needs: [pdf]
  only:
    - devel
    - master
    - /release/

.job_template: &test_job
  stage: test
  tags: [docker]
  artifacts:
    paths:
      - build_regression_tests/tests*.xml
      - build_regression_tests/failed*
    expire_in: 1 week
    when: always

.job_template: &test_job_unix_avx2
  <<: *test_job
  tags: [docker, avx2]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX2

.job_template: &test_job_unix_avx512skx
  <<: *test_job
  tags: [docker, avx512vl]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX

.job_template: &test_job_unix_mpi_avx2
  <<: *test_job
  tags: [docker, avx2, modules]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX2 TEST_MPI

.job_template: &test_job_unix_sanitize
  <<: *test_job
  tags: [docker, avx512vl]
  script:
    - export LSAN_OPTIONS="suppressions=$CI_PROJECT_DIR/scripts/tests/sanitize_ignore.txt"
    - export LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH"
    - PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX
    - build/install/ospray/bin/ospBenchmark --benchmark_min_time=0

.job_template: &test_job_windows_avx2
  <<: *test_job
  script:
    - $env:Path += ";$CI_PROJECT_DIR\build\install\ospray\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX2

.job_template: &test_job_windows_avx512skx
  <<: *test_job
  script:
    - $env:Path += ";$CI_PROJECT_DIR\build\install\ospray\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX512SKX

.job_template: &benchmark_manual_job
  stage: benchmark
  when: manual
  script:
    - scripts/tests/run-benchmarks.sh

.job_template: &benchmark_scheduled_job
  stage: benchmark
  only:
    variables:
      - $RUN_SCHEDULE_BENCHMARKS
  script:
    - scripts/tests/run-benchmarks.sh

### BUILD JOBS ###

build-arch-gcc:
  <<: *archlinux
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-clang:
  <<: *archlinux
  stage: build
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF

build-arch-gcc-extras:
  <<: *archlinux
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_OIDN=ON

build-arch-clang-extras:
  <<: *archlinux
  stage: build
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_OIDN=ON

build-arch-clang-devel:
  <<: *archlinux
  stage: build
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_EMBREE_FROM_SOURCE=ON -DEMBREE_VERSION=devel -DBUILD_OIDN=ON -DBUILD_OIDN_FROM_SOURCE=ON -DOIDN_VERSION=devel -DOPENVKL_VERSION=devel -DRKCOMMON_VERSION=devel
  only: [schedules]

build-linux-debug-all:
  <<: *archlinux
  stage: build
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/build_gitlab/linux.sh -G Ninja -DCMAKE_BUILD_TYPE=Debug -DDEPENDENCIES_BUILD_TYPE=Debug -DBUILD_GLFW=OFF -DBUILD_OSPRAY_CI_EXTRAS=ON -DBUILD_EMBREE_FROM_SOURCE=ON -DBUILD_OIDN=ON -DBUILD_OIDN_FROM_SOURCE=ON -DBUILD_OSPRAY_MODULE_MPI=ON -DBUILD_OSPRAY_MODULE_MULTIDEVICE=ON
  <<: *build_artifacts
  only: [schedules]

build-ubuntu1604-gcc:
  <<: *ubuntu1604
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja
  <<: *build_artifacts

build-ubuntu1804-gcc:
  <<: *ubuntu1804
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF
  <<: *build_artifacts

build-ubuntu2004-gcc:
  <<: *ubuntu2004
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DBUILD_OSPRAY_MODULE_MULTIDEVICE=ON
  <<: *build_artifacts

build-centos8:
  <<: *centos8
  stage: build
  script:
    - scripts/build_gitlab/linux.sh -G Ninja
  <<: *build_artifacts

build-centos7-icc:
  <<: *centos7-gcc4
  stage: build
  script:
    - module load cmake
    - module load intel
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos7-icc15:
  <<: *centos7-gcc4
  stage: build
  script:
    - module load cmake
    - module load intel/2015
    - export CC=icc
    - export CXX=icpc
    - scripts/build_gitlab/linux.sh

build-centos7-icx:
  <<: *centos7
  stage: build
  script:
    - module load cmake
    - module load intel/2022.1
    - export CC=icx
    - export CXX=icpx
    - export CXXFLAGS="-fhonor-infinities -fhonor-nans"
    - export LDFLAGS="-static-intel"
    - scripts/build_gitlab/linux.sh
  <<: *build_artifacts

build-centos7-gcc:
  <<: *centos7
  stage: build
  script:
    - scripts/build_gitlab/linux.sh
  <<: *build_artifacts

build-centos7-mpi-impi:
  <<: *centos7
  stage: build
  script:
    - module load cmake
    - module load intel/2021.2
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON
  <<: *build_artifacts

build-centos7-mpi-openmpi:
  <<: *centos7
  stage: build
  script:
    - module load cmake
    - module load mpi/openmpi-x86_64
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON

build-centos7-mpi-mpich:
  <<: *centos7
  stage: build
  script:
    - module load cmake
    - module load mpi/mpich-x86_64
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON
  <<: *build_artifacts

build-centos8-mpi-openmpi:
  <<: *centos8
  stage: build
  script:
    - module load mpi/openmpi-x86_64
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON

build-centos8-mpi-mpich:
  <<: *centos8
  stage: build
  script:
    - module load mpi/mpich-x86_64
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON

build-mpi-cluster:
  stage: build
  tags: [cluster]
  script:
    - module load cmake
    - module load impi
    - module load gnu
    - scripts/build_gitlab/linux.sh -DBUILD_OSPRAY_MODULE_MPI=ON -DOSPRAY_BUILD_GLM=OFF -DBUILD_OSPRAY_MODULE_MULTIDEVICE=ON
  <<: *build_artifacts
  only: [schedules]

build-linux-debug:
  <<: *archlinux
  stage: build
  script:
    - export CFLAGS=-fsanitize=address
    - export CXXFLAGS=-fsanitize=address
    - export LDFLAGS=-fsanitize=address
    - scripts/build_gitlab/linux.sh -G Ninja -DBUILD_GLFW=OFF -DCMAKE_BUILD_TYPE=Debug
  <<: *build_artifacts

build-osx-clang:
  stage: build
  tags:
    - osx
    - clang
  script:
    - scripts/build_gitlab/macosx.sh -DBUILD_OSPRAY_MODULE_MULTIDEVICE=ON
  <<: *build_artifacts

build-osx-arm:
  stage: build
  tags:
    - mac-arm
  script:
    - scripts/build_gitlab/macosx.sh -DBUILD_TBB_FROM_SOURCE=ON -DBUILD_EMBREE_FROM_SOURCE=ON -DBUILD_OIDN=ON -DBUILD_OIDN_FROM_SOURCE=ON
  <<: *build_artifacts_all

build-windows-msvc15:
  stage: build
  tags:
    - win
    - msvc15
  script:
    - scripts\build_gitlab\win.ps1 "Visual Studio 15 2017 Win64" "v141" "Release" "OFF" "OFF"
  <<: *build_artifacts

build-windows-debug-all:
  stage: build
  tags:
    - win
    - msvc15
    - mpi
  script:
    - scripts\build_gitlab\win.ps1 "Visual Studio 15 2017 Win64" "v141" "Debug" "ON" "ON"
  <<: *build_artifacts
  only: [schedules]

build-windows-msvc16-mpi_and_md:
  stage: build
  tags:
    - win
    - msvc16
    - mpi
  script:
    - scripts\build_gitlab\win.ps1 "Visual Studio 16 2019" "v142" "Release" "ON" "ON"
  <<: *build_artifacts

#build-windows-icc:
#  stage: build
#  script:
#    - scripts\build_gitlab\win.ps1 "Visual Studio 14 2015 Win64" "Intel C++ Compiler 17.0"
#  tags:
#    - icc17
#    - win
#  <<: *build_artifacts


### TEST JOBS ###

test-centos7-gcc-avx2:
  <<: *centos7
  <<: *test_job_unix_avx2
  needs: [build-centos7-gcc]

test-centos7-icx-avx2:
  <<: *centos7
  <<: *test_job_unix_avx2
  needs: [build-centos7-icx]

test-centos8-avx512skx:
  <<: *centos8
  <<: *test_job_unix_avx512skx
  needs: [build-centos8]

test-ubuntu1604-gcc-avx2:
  <<: *ubuntu1604
  <<: *test_job_unix_avx2
  needs: [build-ubuntu1604-gcc]

test-ubuntu1804-gcc-avx512skx:
  <<: *ubuntu1804
  <<: *test_job_unix_avx512skx
  needs: [build-ubuntu1804-gcc]

test-ubuntu2004-gcc-avx2:
  <<: *ubuntu2004
  <<: *test_job_unix_avx2
  needs: [build-ubuntu2004-gcc]

test-ubuntu2004-gcc-avx512skx:
  <<: *ubuntu2004
  <<: *test_job_unix_avx512skx
  needs: [build-ubuntu2004-gcc]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX TEST_MULTIDEVICE

test-centos7-gcc-mpi-mpich-avx2:
  <<: *centos7
  <<: *test_job_unix_mpi_avx2
  needs: [build-centos7-mpi-mpich]
  before_script:
    - module load cmake
    - module load mpi/mpich-x86_64

test-centos7-gcc-mpi-impi-avx2:
  <<: *centos7
  <<: *test_job_unix_mpi_avx2
  needs: [build-centos7-mpi-impi]
  before_script:
    - module load cmake
    - module load intel/2021.2
    # Note: no omnipath/infiniband/shm comm access for MPI within
    # Docker container, just use sockets for running validation test
    - export FI_PROVIDER=sockets

test-mpi-cluster:
  <<: *test_job_unix_avx512skx
  tags: [cluster]
  script:
    - module load impi
    - module load gnu
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX TEST_MPI TEST_MULTIDEVICE
  needs: [build-mpi-cluster]
  only: [schedules]

sanitize-linux-debug:
  <<: *archlinux
  <<: *test_job_unix_sanitize
  needs: [build-linux-debug]

test-linux-debug-all:
  <<: *archlinux
  <<: *test_job_unix_avx512skx
  needs: [build-linux-debug-all]
  only: [schedules]

test-osx-clang:
  <<: *test_job
  tags: [osx]
  needs: [build-osx-clang]
  script:
    - DYLD_FALLBACK_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$DYLD_FALLBACK_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX2 TEST_MULTIDEVICE

test-osx-arm:
  <<: *test_job
  tags: [mac-arm]
  needs: [build-osx-arm]
  script:
    - DYLD_FALLBACK_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$DYLD_FALLBACK_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX

test-tutorials:
  <<: *centos7
  stage: test
  needs: [build-centos7-gcc]
  script:
    - scripts/tests/run_tutorials.sh

test-find-ospray:
  <<: *centos7
  stage: test
  needs: [build-centos7-gcc]
  script:
    - module load cmake
    - mkdir buildtut
    - cd buildtut
    - cmake -D ospray_DIR=`echo $CI_PROJECT_DIR/build/install/ospray/lib/cmake/ospray-*` ../apps/ospTutorial/ospTutorialFindospray
    - cmake --build .

test-windows-msvc15-avx2:
  <<: *test_job_windows_avx2
  tags: [win, msvc15, only-avx2]
  needs: [build-windows-msvc15]
  allow_failure: true

test-windows-msvc15-avx512skx:
  <<: *test_job_windows_avx512skx
  tags: [win, msvc15, avx512vl]
  needs: [build-windows-msvc15]

test-windows-debug-all:
  <<: *test_job_windows_avx2
  tags: [win, msvc15, only-avx2]
  needs: [build-windows-debug-all]
  only: [schedules]

test-windows-msvc16-avx2:
  <<: *test_job_windows_avx2
  tags: [win, msvc16, only-avx2, mpi]
  needs: [build-windows-msvc16-mpi_and_md]
  allow_failure: true
  script:
    - $env:Path += ";$CI_PROJECT_DIR\build\install\ospray\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX2 TEST_MULTIDEVICE TEST_MPI

test-windows-msvc16-avx512skx:
  <<: *test_job_windows_avx512skx
  tags: [win, msvc16, avx512vl, mpi]
  needs: [build-windows-msvc16-mpi_and_md]
  script:
    - $env:Path += ";$CI_PROJECT_DIR\build\install\ospray\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX512SKX TEST_MULTIDEVICE TEST_MPI

generate-ci-baseline-avx2:
  <<: *ubuntu2004
  <<: *test_job_unix_avx2
  needs: [build-ubuntu2004-gcc]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/generate_baseline.sh
  artifacts:
    paths:
      - generated_test_images
    expire_in: 3 day
  when: manual

generate-ci-baseline-avx512skx:
  <<: *ubuntu2004
  <<: *test_job_unix_avx512skx
  needs: [build-ubuntu2004-gcc]
  script:
    - LD_LIBRARY_PATH="$CI_PROJECT_DIR/build/install/ospray/lib:$LD_LIBRARY_PATH" PATH="$CI_PROJECT_DIR/build/install/ospray/bin:$PATH" scripts/tests/generate_baseline.sh
  artifacts:
    paths:
      - generated_test_images
    expire_in: 3 day
  when: manual

### Benchmarks (Manual Runs) ###

benchmark-x8280-1:
  <<: *benchmark_manual_job
  tags: [vis-perf-x8280-1]
  needs: [build-centos8]

benchmark-a-1:
  <<: *benchmark_manual_job
  tags: [vis-perf-a-1]
  needs: [build-centos8]

benchmark-adl-1:
  <<: *benchmark_manual_job
  tags: [vis-sdp-adl-1-perf]
  needs: [build-centos8]

benchmark-tgl-1:
  <<: *benchmark_manual_job
  tags: [vis-sdp-dg2-01-perf]
  needs: [build-centos8]

### Benchmarks (Scheduled Runs) ###

benchmark-x8280-1-schedule:
  <<: *benchmark_scheduled_job
  tags: [vis-perf-x8280-1]
  needs: [build-centos8]

benchmark-a-1-schedule:
  <<: *benchmark_scheduled_job
  tags: [vis-perf-a-1]
  needs: [build-centos8]

benchmark-adl-1-schedule:
  <<: *benchmark_scheduled_job
  tags: [vis-sdp-adl-1-perf]
  needs: [build-centos8]

benchmark-tgl-1-schedule:
  <<: *benchmark_scheduled_job
  tags: [vis-sdp-dg2-01-perf]
  needs: [build-centos8]

### Documentation ###

.job_template: &doc-defaults
  <<: *docu
  stage: docu
  needs: []
  variables:
    GIT_SUBMODULE_STRATEGY: normal

pdf:
  <<: *doc-defaults
  script:
    - cd doc
    - make pdf
    - make checklinks
  artifacts:
    paths:
      - readme.pdf
    expire_in: 1 week

web:
  <<: *doc-defaults
  script:
    - cd doc
    - make www
  artifacts:
    paths:
      - doc/www/*
    expire_in: 1 week

spec:
  <<: *doc-defaults
  script:
    - cd doc
    - make spec
    - mv www/images _images
  artifacts:
    paths:
      - doc/ospray-spec.*
      - doc/_images/*
    expire_in: 1 week


### RELEASE JOBS ###

release-linux:
  <<: *centos7
  <<: *release_job
  script:
    - source $SPACK_SETUP_ENV
    - module load cmake/3.15.2
    - module load mpich/3.2
    - module load intel/2022.1
    - export CC=icx
    - export CXX=icpx
    - export CXXFLAGS="-fhonor-infinities -fhonor-nans"
    - export LDFLAGS="-static-intel"
    - scripts/release/linux.sh
  artifacts:
    paths:
      - build_release/*.gz
    expire_in: 3 day

release-osx-clang:
  <<: *release_job
  tags:
    - clang
    - osx
    - sign
  script:
    - export CC=clang
    - export CXX=clang++
    - scripts/release/macosx.sh
    - $SIGN_FILE_MAC -o runtime -e scripts/release/ospray.entitlements build_release/ospray-*pkg
    - scripts/release/macosx_notarization.sh build_release/ospray-*.pkg
  artifacts:
    paths:
      - build_release/*.zip
      - build_release/*.pkg
    expire_in: 3 day

release-windows:
  <<: *release_job
  tags:
    - msvc15
    - win
    - mpi
  script:
    - scripts\release\win.ps1 "Visual Studio 15 2017 Win64"
    - ;& $env:SIGN_FILE_WINDOWS ospray*.msi
  artifacts:
    paths:
      - build_release\ospray*.zip
      - build_release\ospray*.msi
    expire_in: 3 day


### SCAN JOBS ###

kw-build:
  <<: *centos7
  stage: scan1
  needs: []
  script:
    - module load cmake
    - module load intel/2021.2
    - scripts/build_gitlab/kw.sh
    - test -s $CI_PROJECT_DIR/klocwork/build.log
    - test -s $CI_PROJECT_DIR/klocwork/build_name
  artifacts:
    paths:
        - ./klocwork/*
    expire_in: 3 day

protex:
  <<: *centos7
  stage: scan1
  needs: []
  script:
    - scripts/scan/protex.sh

kw-scan:
  <<: *centos7
  stage: scan2
  needs: [kw-build]
  script:
    - scripts/scan/kw-check-issues.sh

kw-gen-report:
  <<: *centos7
  stage: scan2
  needs: [kw-build]
  only:
    - devel
    - master
    - /release/
  script:
    - scripts/scan/kw-gen-report.sh
    - scripts/scan/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID klocwork "klocwork/report.log"
  artifacts:
    paths:
      - ./klocwork/report.log

bdba:
  <<: *centos7
  <<: *release_job
  stage: scan3
  needs:
    - release-linux
    - release-osx-clang
    - release-windows
  script:
    - scripts/scan/bdba.sh "build_release/ospray*"
    - scripts/scan/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID bdba "ospray-*.pdf"
    - scripts/scan/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID bdba "ospray-*.csv"
  artifacts:
    paths:
      - build_release/ospray-*
      - ospray-*

av:
  <<: *clamav
  <<: *release_job
  stage: scan3
  needs:
    - release-linux
    - release-osx-clang
    - release-windows
  script:
    - freshclam | tee -a /tmp/av_scan.log
    - clamscan -va --max-filesize=512M --max-scansize=1024M --alert-broken --alert-exceeds-max build_release/ospray-* | tee -a /tmp/av_scan.log
    - scripts/scan/store-files.sh $CI_PROJECT_NAME $CI_PIPELINE_ID av /tmp/av_scan.log
  artifacts:
    paths:
      - build_release/ospray-*

test-release-linux:
  <<: *centos7
  <<: *test_job_unix_avx512skx
  <<: *release_job
  stage: scan3
  needs: [release-linux]
  script:
    - source $SPACK_SETUP_ENV
    - module load cmake/3.15.2
    - module load mpich/3.2
    - tar xzf build_release/*.gz
    - PATH="$CI_PROJECT_DIR/`ls -d1 ospray-*/bin`:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX512SKX TEST_MPI

test-release-osx:
  <<: *test_job
  <<: *release_job
  stage: scan3
  tags: [osx, sign]
  needs: [release-osx-clang]
  script:
    - unzip build_release/*.zip
    - PATH="$CI_PROJECT_DIR/`ls -d1 ospray-*/bin`:$PATH" scripts/tests/run_tests.sh "$CI_PROJECT_DIR" AVX2
    - $SIGN_FILE_MAC -t $CI_PROJECT_DIR/ospray-*/bin/* $CI_PROJECT_DIR/ospray-*/lib/*.dylib $CI_PROJECT_DIR/build_release/*.pkg

test-release-windows-zip:
  <<: *test_job
  <<: *release_job
  stage: scan3
  tags: [win, mpi, avx512vl]
  needs: [release-windows]
  script:
    - Expand-Archive build_release/*.zip -DestinationPath .
    - $env:Path += ";" + (Get-ChildItem $CI_PROJECT_DIR\ospray-*\bin | Select-Object -Expand FullName)
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX512SKX TEST_MPI
    - ;& $env:SIGN_FILE_WINDOWS -t (Get-ChildItem $CI_PROJECT_DIR\ospray-*\bin\* | Select-Object -Expand FullName)

test-release-windows-msi:
  <<: *test_job
  <<: *release_job
  stage: scan3
  tags: [win, mpi, avx512vl]
  needs: [release-windows]
  script:
    - msiexec.exe /a (Get-ChildItem build_release/*.msi | Select-Object -Expand FullName) /qn TARGETDIR=$CI_PROJECT_DIR
    - $env:Path += ";$CI_PROJECT_DIR\Intel\OSPRay v2\bin"
    - scripts\tests\run_tests.ps1 "$CI_PROJECT_DIR" AVX512SKX TEST_MPI
    - ;& $env:SIGN_FILE_WINDOWS -t $CI_PROJECT_DIR/build_release/*.msi (Get-ChildItem  "$CI_PROJECT_DIR\Intel\OSPRay v2\bin\*" | Select-Object -Expand FullName)


### Mirror ###

mirror:
  <<: *centos7
  stage: mirror
  only: [devel]
  dependencies: []
  script:
    - git remote add github https://${GITHUB_TOKEN}github.com/ospray/ospray.git
    - git push github HEAD:devel
