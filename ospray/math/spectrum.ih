// ======================================================================== //
// Copyright 2009-2017 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "math/spectrum.h"
#include "math/vec.ih"

typedef uniform float<SPECTRUM_SAMPLES> spectrum;

extern spectrum spectrum_sRGB_r;
extern spectrum spectrum_sRGB_g;
extern spectrum spectrum_sRGB_b;

inline uniform vec3f spectrum_sRGB(const uniform int l) {
  return make_vec3f(spectrum_sRGB_r[l], spectrum_sRGB_g[l], spectrum_sRGB_b[l]);
}

// note: result can be <0 or >1
inline uniform vec3f spectrum2rgb(const spectrum &s) {
  uniform vec3f rgb = make_vec3f(0.f);
  for (uniform int l = 0; l < SPECTRUM_SAMPLES; l++) 
    rgb = rgb + s[l] * spectrum_sRGB(l);

  return rgb;
}
