// ======================================================================== //
// Copyright 2009-2018 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "Distribution1D.ih"
#include "math/vec.ih"

struct Distribution2D 
{
  vec2i size;
  vec2f rcpSize;        // 1/size
  uniform float* cdf_x; // size.x*size.y elements
  uniform float* cdf_y; // size.y elements
};

// consumes array 'importance' of size size.x*size.y, ownership is transferred to Distribution2D
Distribution2D* uniform Distribution2D_create(const uniform vec2i size, float* uniform importance);
// consumes arrays 'cdf_x' of size size.x*size.y and 'row_importance' of size size.y, ownership is transferred to Distribution2D
Distribution2D* uniform Distribution2D_create(const uniform vec2i size, float* uniform cdf_x, float* uniform row_importance);
void Distribution2D_destroy(Distribution2D* uniform);

struct Sample2D
{
  vec2f uv;
  float pdf;
};

// inline?
Sample2D Distribution2D_sample(const Distribution2D* uniform, const vec2f &s);
float  Distribution2D_pdf(const Distribution2D* uniform, const vec2f &uv);
