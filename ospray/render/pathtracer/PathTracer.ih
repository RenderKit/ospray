// ======================================================================== //
// Copyright 2009-2017 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "math/vec.ih"
#include "common/Model.ih"
#include "fb/FrameBuffer.ih"
#include "render/util.ih"
#include "lights/Light.ih"
#include "render/Renderer.ih"

#define MAX_LIGHTS 1000

struct PathTracer {
  Renderer super;

  int32 rouletteDepth;
  float maxRadiance;
  Texture2D* uniform backplate;
  // coefficients of plane equation defining geometry to catch shadows for
  // compositing; disabled if normal is zero-length
  vec4f shadowCatcherPlane;
  bool shadowCatcher; // preprocessed

  const uniform Light *uniform *uniform lights;
  uint32 numLights;
  uint32 numGeoLights;
  // XXX hack: there is no concept of instance data, but need pdfs (wrt. area)
  // of geometry light instances
  float *uniform areaPDF;
};
