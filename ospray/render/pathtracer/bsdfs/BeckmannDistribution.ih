// ======================================================================== //
// Copyright 2009-2018 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "MicrofacetDistribution.ih"

// Beckmann distribution
struct BeckmannDistribution
{
  float alpha;
};

inline BeckmannDistribution make_BeckmannDistribution(float alpha)
{
  BeckmannDistribution m;
  m.alpha = alpha;
  return m;
}

inline vec3f sample(const BeckmannDistribution& self,
                    float& pdf, const vec2f& s)
{
  float alpha2 = sqr(self.alpha);
  float tanTheta2 = -alpha2 * log(1.f-s.x);
  float cosTheta = rsqrt(1.f + tanTheta2);
  float sinTheta = cos2sin(cosTheta);

  float phi = 2.f*pi * s.y;

  float cosTheta3 = sqr(cosTheta)*cosTheta;
  pdf = (1.f-s.x) * rcp(pi * alpha2 * cosTheta3);

  float sinPhi, cosPhi;
  sincos(phi, &sinPhi, &cosPhi);

  float x = cosPhi * sinTheta;
  float y = sinPhi * sinTheta;
  float z = cosTheta;
  return make_vec3f(x,y,z);
}