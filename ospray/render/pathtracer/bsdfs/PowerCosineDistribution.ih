// ======================================================================== //
// Copyright 2009-2018 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "ospray/math/math.ih"

struct PowerCosineDistribution
{
  float exp;
};

inline float eval(const PowerCosineDistribution& self,
                  float cosThetaH, float& pdf)
{
  pdf = powerCosineSampleHemispherePDF(cosThetaH, self.exp);
  return (self.exp+2) * one_over_two_pi * pow(abs(cosThetaH), self.exp);
  // TODO: check with powerCosineSampleHemispherePDF
}

/*! Samples the power cosine distribution. */
inline vec3f sample(const PowerCosineDistribution& self,
                    float& pdf, const vec2f& s)
{
  const vec3f wh = powerCosineSampleHemisphere(self.exp, s);
  pdf = powerCosineSampleHemispherePDF(wh, self.exp);
  return wh;
}

inline PowerCosineDistribution make_PowerCosineDistribution(float _exp)
{
  PowerCosineDistribution m;
  m.exp = _exp;
  return m;
}
