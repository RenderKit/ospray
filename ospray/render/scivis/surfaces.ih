// ======================================================================== //
// Copyright 2009-2019 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "SciVis.ih"

struct SurfaceShadingInfo
{
  vec4f shadedColor;
  vec3f albedo;
};

typedef SurfaceShadingInfo SSI;

inline void computeDG(const World *uniform world,
                      const SciVis *uniform renderer,
                      const Ray &ray,
                      DifferentialGeometry &dg)
{
  postIntersect(world,
      &renderer->super,
      dg,
      ray,
      DG_NG | DG_NS | DG_NORMALIZE | DG_FACEFORWARD | DG_COLOR | DG_TEXCOORD);
}

SSI computeShading(const SciVis *uniform self,
                   const FrameBuffer *uniform fb,
                   const World *uniform world,
                   const DifferentialGeometry &dg,
                   ScreenSample &sample);
