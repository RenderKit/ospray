// Copyright 2009-2021 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "camera/Camera.ih"
#include "common/DistributedWorld.ih"
#include "fb/FrameBuffer.ih"
#include "fb/Tile.ih"
#include "render/Renderer.ih"

struct DistributedRenderer;

typedef unmasked void (*DR_ComputeRegionVisibility)(
    DistributedRenderer *uniform self,
    FrameBuffer *uniform fb,
    Camera *uniform camera,
    DistributedWorld *uniform world,
    bool *uniform regionVisible,
    void *uniform perFrameData,
    uniform Tile &tile,
    uniform int taskIndex);

typedef void (*DR_RenderRegionSampleFct)(DistributedRenderer *uniform self,
    FrameBuffer *uniform fb,
    DistributedWorld *uniform world,
    const box3f *uniform region,
    const vec2f &regionInterval,
    void *uniform perFrameData,
    varying ScreenSample &sample);

typedef unmasked void (*DR_RenderRegionTileFct)(
    DistributedRenderer *uniform self,
    FrameBuffer *uniform fb,
    Camera *uniform camera,
    DistributedWorld *uniform world,
    const box3f *uniform region,
    void *uniform perFrameData,
    uniform Tile &tile,
    uniform int taskIndex);

struct DistributedRenderer
{
  Renderer super;

  DR_ComputeRegionVisibility computeRegionVisibility;
  DR_RenderRegionSampleFct renderRegionSample;
  DR_RenderRegionTileFct renderRegionToTile;
};

void DistributedRenderer_Constructor(uniform DistributedRenderer *uniform self);
