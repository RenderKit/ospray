// Copyright 2009 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "embree3/rtcore.isph"

#include "OSPConfig.h"

#ifndef ISPC_UINT_IS_DEFINED
typedef unsigned int64 uint64;
typedef unsigned int32 uint32;
typedef unsigned int16 uint16;
typedef unsigned int8 uint8;
#endif

#define LOG(x)

#define PRINT(x) print(#x " = %\n", x)
#define PRINT3(x) print(#x " = (%, %, %)\n", get(x, 0), get(x, 1), get(x, 2))
// prints first unmasked element
#define PRINTU(x)                                                              \
  print(#x "[%] = %\n",                                                        \
      count_trailing_zeros(lanemask()),                                        \
      extract(x, count_trailing_zeros(lanemask())))
#define PRINT3U(x)                                                             \
  print(#x "[%] = (%, %, %)\n",                                                \
      count_trailing_zeros(lanemask()),                                        \
      extract(get(x, 0), count_trailing_zeros(lanemask())),                    \
      extract(get(x, 1), count_trailing_zeros(lanemask())),                    \
      extract(get(x, 2), count_trailing_zeros(lanemask())))

/*! a C++-callable 'delete' of ISPC-side allocated memory of uniform objects */
export void delete_uniform(void *uniform uptr);

/*! 64-bit malloc. allows for alloc'ing memory larger than 64 bits */
extern "C" void *uniform malloc64(uniform uint64 size);
extern "C" void free64(void *uniform ptr);

/*! Thread Local Storage functions */
extern "C" void *uniform pushTLS(uniform uint64 size);
extern "C" void *uniform reallocTLS(void *uniform ptr, uniform uint64 size);
extern "C" void popTLS(void *uniform ptr);
