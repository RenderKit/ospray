// Copyright 2009-2021 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "Tile.ih"
/*! \file framebuffer.ih Defines the abstract base class of an ISPC frame buffer
 */

struct FrameBuffer;

/*! app-mappable format of the color buffer. make sure that this
  matches the definition on the ISPC side */
typedef enum
{
  ColorBufferFormat_NONE, /*!< app will never map the color buffer (e.g., for a
                            framebuffer attached to a display wall that will
                            likely have a different res that the app has...) */
  ColorBufferFormat_RGBA_UINT8, /*! app will map in RGBA, one uint8 per channel
                                 */
  ColorBufferFormat_RGB_UINT8, /*! app will map in RGBA, one uint8 per channel
                                */
  ColorBufferFormat_RGBA_FLOAT32, /*! app will map in RBGA, one float per
                                     channel */
} FrameBuffer_ColorBufferFormat;

struct FrameBuffer
{
  vec2i size; /*!< size (width x height) of frame buffer, in pixels */
  vec2f rcpSize; /*! one over size (precomputed) */
  int32 frameID;

  FrameBuffer_ColorBufferFormat colorBufferFormat;
};

void FrameBuffer_Constructor(
    FrameBuffer *uniform self);

void FrameBuffer_set(FrameBuffer *uniform self,
    const uniform uint32 size_x,
    const uniform uint32 size_y,
    int32 uniform colorBufferFormat);
