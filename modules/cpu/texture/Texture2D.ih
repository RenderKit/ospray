// Copyright 2009 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "common/OSPCommon.ih"
#include "rkcommon/math/vec.ih"
// c++ shared
#include "Texture2DShared.h"

OSPRAY_BEGIN_ISPC_NAMESPACE

SYCL_EXTERNAL __noinline vec4f Texture2D_get(
    const uniform Texture2D *uniform self,
    const vec2f &st,
    const float pixelFootprint);

// XXX won't work with MIPmapping: clean implementation with clamping on integer
// coords needed then
inline vec2f clamp2edge(const uniform Texture2D *uniform self, const vec2f p)
{
  const vec2f halfTexel = rcp(make_vec2f(self->size.x, self->size.y)) * 0.5f;
  return clamp(p, halfTexel, 1.0f - halfTexel);
}

inline float get1f(const uniform Texture2D *uniform self,
    const vec2f &st,
    const float pixelFootprint = flt_min)
{
  vec4f ret = Texture2D_get(self, st, pixelFootprint);
  return ret.x;
}

inline vec3f get3f(const uniform Texture2D *uniform self,
    const vec2f &st,
    const float pixelFootprint = flt_min)
{
  vec4f ret = Texture2D_get(self, st, pixelFootprint);
  return make_vec3f(ret);
}

inline vec4f get4f(const uniform Texture2D *uniform self,
    const vec2f &st,
    const float pixelFootprint = flt_min)
{
  return Texture2D_get(self, st, pixelFootprint);
}

OSPRAY_END_ISPC_NAMESPACE
