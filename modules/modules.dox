/*! \defgroup ospray_modules OSPRay Modules 

  \ingroup ospray

  \brief Modules are OSPRay's way of adding specialized functionality
  for certain types of geometries, volumes, cameras, renderers, etc
  without hard-coding all these different variants into the core
  library.

  \section modules_intro Introduction

  Modules are OSPRay's way of adding specialized functionality
  for certain types of geometries, volumes, cameras, renderers, etc
  without hard-coding all these different variants into the core
  library.

  Modules are added to OSPRay by linking or copying the respective
  module's code into a subdirectory under ospray/modules; the
  CMakeFile in ospray/modules will automatically build all
  subdirectories present under this dir. It is good practice to have
  each module's cmakefile have a flag that enables/disbles this
  module, and that is 'off' by default (i.e., only those modules
  should build that the user explicitly enabled). Each plugin should
  build its own shared library that the OSPRay Plugin Infrastructure
  will then be able to load upon the respective \ref ospLoadModule
  call (in order for ospLoadModule to find the respective module the
  shared library has to follow a certain naming scheme, see detailed
  comments for \ref ospLoadModule).

  Modules can extend OSPRay in a variety of forms: Each module can
  implement one or multiple new geometry types, new camera types, new
  renderers, etc, etc. It is good practice to make sure that a module
  implements both scalar and ISPC variants, but not all modules may
  follow that. Similarly, some modules may only be available for
  certain architectures (say, only working on AVX2, and not
  backwards-compatible to SSE; or available locally, but not in MPI
  mode); it is up to the module to properly warn/inform the user if he
  tries to build or run a module in a form that is not supported.


  */


